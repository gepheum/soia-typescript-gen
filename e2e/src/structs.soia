import JsonValue from "./enums.soia";
import Weekday from "src/enums.soia";
import * as car from "src/vehicles/car.soia";

struct Point {
  x: int32;
  y: int32;
}

struct Color {
  r: int32;
  g: int32;
  b: int32;
}

struct Triangle {
  color: Color;
  points: [Point];
}

struct FullName {
  first_name: string;
  removed;
  last_name: string;
  suffix: string;
}

struct Item {
  bool: bool;
  string: string;
  int32: int32;
  int64: int64;
  struct User {
    id: string;
  }
  user: User;
  weekday: Weekday;
}

struct Items {
  array_with_bool_key: [Item|bool];
  array_with_string_key: [Item|string];
  array_with_int32_key: [Item|int32];
  array_with_int64_key: [Item|int64];
  array_with_wrapper_key: [Item|user.id];
  array_with_enum_key: [Item|weekday];
}

struct JsonValues {
  json_values: [JsonValue];
}

struct CarOwner {
  car: car.Car;
  owner: FullName;
}

struct Foo {
  struct Bar {
    bar: string?;
    foos: [Foo?]?;
  }
  bars: [Bar]?;

  struct Zoo {}
  zoos: [Zoo?]?;
}

struct NameCollision {
  struct Foo {
    struct Foo {
      struct Foo {
        x: int32;
        top_level_foo: .NameCollision.Foo;
      }
      foo: Foo;
    }
    foo: Foo;
  }
  foo: Foo;

  struct Array {
    struct Array {}
    array: Array;
  }
  array: Array;

  struct Value {}

  enum Enum {
    DEFAULT;

    struct Mutable {}
    mutable: Mutable;
  }
}

struct RecA {
  a: RecA;
  b: RecB;
}

struct RecB {
  a: RecA;
  a_list: [RecA?]?;
}

struct Name {
  struct Name1 {
  }
  struct Name2 {
    name1: Name1;
  }
  struct Name {
    struct Name {
      name2: Name2;
    }
  }
}
